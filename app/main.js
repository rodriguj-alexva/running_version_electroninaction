
const {app, BrowserWindow, dialog } = require('electron');
const fs = require('fs');

const windowSet = new Set();
//var mainWindow = null;

function openFile(targetWindow, file) {
	const content = fs.readFileSync(file).toString();
	targetWindow.webContents.send('file-opened', file, content);
}
exports.openFile = openFile;

function getFileFromUser(targetWindow) {
	console.log('**** GET FILE FROM USER ');
	
	const fileList = dialog.showOpenDialogSync(targetWindow, { // !! fix, showOpenDialog() is async
		properties: ['openFile'],
		filters: [
				{name: 'Markdown Files', extensions: ['md', 'markdown']},
				{name: 'Text Files', extensions: ['txt']}
		]
	});
	
//	if (!fileList) {
//		return;
//	}
//	var file = fileList[0];
//	const fileContent = fs.readFileSync(file).toString();
//	
////	console.log(fileContent);
//	mainWindow.webContents.send('file-opened', file, fileContent);
	if (fileList) {
		openFile(targetWindow, fileList[0]);
	}
};
exports.getFileFromUser = getFileFromUser;

function createWindow() {
	var x; // if undefined, new BrowserWindow() picks random location
	var y;
	
	const currentWindow = BrowserWindow.getFocusedWindow();
	if (currentWindow) {
		const [ currentWindowX, currentWindowY ] = currentWindow.getPosition();
		x = currentWindowX + 10;
		y = currentWindowY + 10;
	}
	
	var newWindow = new BrowserWindow({
		x,
		y,
		show:false,  
		webPreferences: {
			nodeIntegration: true, 
			enableRemoteModule: true 
		}
	});
	newWindow.loadFile('./app/index.html');
	newWindow.once('ready-to-show', () => {
		newWindow.show();
	});
	newWindow.on('closed', () => {
		windowSet.delete(newWindow);
		newWindow = null;
	});
	windowSet.add(newWindow);
	return newWindow;
}
exports.createWindow = createWindow;

app.on('ready', () => {
/* Chap 3 code */
/*
	mainWindow = new BrowserWindow({
		show:false,  // !! fix show:false, if true 'ready-to-show' is not triggered
		webPreferences: {
			nodeIntegration: true, // !! fix default is false and code in HTML script tags is not executed
			enableRemoteModule: true // !! fix; warning report generated by electron Chromium itself
		}
	});
	mainWindow.loadFile('./app/index.html'); // !! fix
	
	mainWindow.once('ready-to-show', () => {
		mainWindow.show();
//		mainWindow.webContents.openDevTools();
		
//		getFileFromUser();
	});
	
	mainWindow.on('closed', () => {
		mainWindow = null;
	}); */
	createWindow();
});
